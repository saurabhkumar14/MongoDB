require("dotenv").config();
const express = require("express");
const { MongoClient } = require("mongodb");

const app = express();
const PORT = process.env.PORT || 3000;
const EXPECTED_TOKEN = process.env.API_TOKEN;
const uri = process.env.MONGO_URI;

let db, productsCollection;

// Connect to MongoDB
MongoClient.connect(uri)
  .then(client => {
    db = client.db(); // default DB (from MONGO_URI)
    productsCollection = db.collection("products");
    console.log("✅ Connected to MongoDB");
  })
  .catch(err => console.error("❌ MongoDB connection error:", err));

// Middleware for authentication
app.use((req, res, next) => {
  const authHeader = req.headers["authorization"];
  if (!authHeader || authHeader !== `Bearer ${EXPECTED_TOKEN}`) {
    return res.status(401).json({ error: "Unauthorized" });
  }
  next();
});

// Fetch all products
app.get("/api/products", async (req, res) => {
  try {
    const products = await productsCollection.find().toArray();
    res.json(products);
  } catch (err) {
    res.status(500).json({ error: "Database error" });
  }
});

// Fetch single product by productId
app.get("/api/products/:id", async (req, res) => {
  try {
    const product = await productsCollection.findOne({ productId: req.params.id });
    if (!product) return res.status(404).json({ error: "Not Found" });
    res.json(product);
  } catch (err) {
    res.status(500).json({ error: "Database error" });
  }
});

app.listen(PORT, () => {
  console.log(`🚀 Server running on port ${PORT}`);
});
